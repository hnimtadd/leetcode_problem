class Solution(object):
    def bulbSwitch(self, n):
        """
        :type n: int
        :rtype: int
        """
        res = 0
        res = [0] * n
        for i in range(n):
            num_divisors = 1
            tmp = 0
            ptr = 2
            while i > 0:
                div, mod = divmod(i, ptr)
                if mod != 0:
                    ptr += 1
                    num_divisors *= (tmp+1)
                    continue
                else:
                    i = div
                    tmp += 1
            return i

        return sum(res)

    def find_num_divisors(self, i):
        ptr = 2
        res = 1
        while i != 1 and ptr < i:
            div, mod = divmod(i, ptr)
            if mod == 0:
                i = div
                res *= (div + 1)
            else:
                ptr += 1
        return res


if __name__ == "__main__":
    n = 10000
    sol = Solution()
    print(sol.find_num_divisors(6))
    # print(sol.bulbSwitch(n))
